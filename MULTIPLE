// app/page.tsx
import React from 'react';
import { Button } from 'components/Button';
import { ChevronLeft, ChevronRight } from 'components/Icons';
import { scrollPage } from 'utils/scrollPage';
import './globals.css'; // Ensure this import is present

const HomePage = () => {
  return (
    <section id="home" className="site-container pt-32 pb-20">
      <div className="grid grid-cols-1 gap-10 sm:[grid-template-columns:3fr_7fr] items-stretch">
        {/* Hero content here */}
      </div>
      <div className="site-container">
        {/* Services/Projects/Skills/Testimonials content here */}
      </div>
      <div className="site-container">
        {/* Contact section content here */}
      </div>
    </section>
  );
};

export default HomePage;

// components/services.tsx
import React from 'react';
import { Button } from 'components/Button';
import { ChevronLeft, ChevronRight } from 'components/Icons';
import { scrollPage } from 'utils/scrollPage';

const ServicesCarousel = () => {
  return (
    <div className="relative overflow-x-hidden">
      <div className="flex gap-6 overflow-x-auto scroll-smooth snap-x snap-mandatory px-1 pb-2 [scrollbar-width:none] [-ms-overflow-style:none] [&::-webkit-scrollbar]:hidden">
        {/* Carousel content here */}
      </div>
      <div className="mt-4 flex items-center justify-center gap-3">
        <Button type="button" variant="outline" size="icon" aria-label="Scroll previous" onClick={() => scrollPage(-1)}>
          <ChevronLeft className="h-5 w-5" />
        </Button>
        <Button type="button" variant="outline" size="icon" aria-label="Scroll next" onClick={() => scrollPage(1)}>
          <ChevronRight className="h-5 w-5" />
        </Button>
      </div>
    </div>
  );
};

export default ServicesCarousel;

// app/globals.css
@layer base {
  html, body { overflow-x: hidden; }
}

@layer components {
  .site-container {
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    padding-left: 1rem;
    padding-right: 1rem;
  }
  @media (min-width: 1250px) {
    .site-container { max-width: 1200px; }
  }
}

// postcss.config.mjs
/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}

export default config

// tailwind.config.ts
import type { Config } from "tailwindcss"

const config: Config = {
  darkMode: ["class"],
  content: [
    "./app/**/*.{ts,tsx,mdx}",
    "./components/**/*.{ts,tsx}",
    "./lib/**/*.{ts,tsx}",
  ],
  theme: {
    extend: {
      fontFamily: {
        sans: ["var(--font-sans)", "system-ui", "sans-serif"],
      },
      colors: {
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        primary: { DEFAULT: "#8B5CF6", foreground: "#FFFFFF" },
        secondary: { DEFAULT: "#1F1F1F", foreground: "#FFFFFF" },
        destructive: { DEFAULT: "hsl(var(--destructive))", foreground: "hsl(var(--destructive-foreground))" },
        muted: { DEFAULT: "hsl(var(--muted))", foreground: "hsl(var(--muted-foreground))" },
        accent: { DEFAULT: "hsl(var(--accent))", foreground: "hsl(var(--accent-foreground))" },
        card: { DEFAULT: "#1A1A1A", foreground: "#FFFFFF" },
      },
      borderRadius: {
        lg: "var(--radius)",
      },
    },
  },
  plugins: [],
}

export default config

// app/layout.tsx
import type React from "react"
import type { Metadata } from "next"
import "./globals.css"
import { Inter } from 'next/font/google'

export const metadata: Metadata = {
  title: "Portfolio",
  description: "Personal portfolio",
}

const inter = Inter({
  subsets: ["latin"],
  display: "swap",
  variable: "--font-sans",
})

export default function RootLayout({ children }: { children: React.ReactNode }) {
  return (
    <html lang="pt-BR" className={`${inter.variable} dark antialiased`}>
      <body>{children}</body>
    </html>
  )
}
